# 1/1 (black/white) Action variables, 2 and 2 (action parameter) index variables (x, y), and game stop variables : 
exists(1, 2, 3, 4, 5, 6)
exists(7)
forall(8, 9, 10, 11)
# white illegal variable: 
exists(12)
# indicator variables, specifying which position is voilated in illegal move: 
exists(13)
exists(14, 15, 16, 17, 18, 19)
exists(20)
forall(21, 22, 23, 24)
# white illegal variable: 
exists(25)
# indicator variables, specifying which position is voilated in illegal move: 
exists(26)
exists(27, 28, 29, 30, 31, 32)
# black goal index variables: 
# white goal index and conjunction variables: 
# Forall index variables: 
forall(33, 34, 35, 36)
# Predicate variables: 
exists(37, 38)
exists(39, 40)
exists(41, 42)
exists(43, 44)
exists(45, 46)
exists(47, 48)
output(266)
# ------------------------------------------------------------------------
# Transitions: 
# Player 1 (black) transition function for time step 0: 
# less than constraints for black moves:
# propagation constraints:
49 = or(-37, 39)
50 = or(-39, 37)
51 = and(49, 50)
52 = or(-38, 40)
53 = or(-40, 38)
54 = and(52, 53)
55 = and(51, 54)
# less than constraints for positive index bounds:
56 = and(2, -3)
57 = or(-2, 56)
# less than constraints for positive index bounds:
58 = and(4, -5)
59 = or(-4, 58)
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
60 = or(-2, 33)
61 = or(-33, 2)
62 = and(60, 61)
63 = or(-3, 34)
64 = or(-34, 3)
65 = and(63, 64)
66 = and(62, 65)
# new y constraint equality gate with forall y variables: 
67 = or(-4, 35)
68 = or(-35, 4)
69 = and(67, 68)
70 = or(-5, 36)
71 = or(-36, 5)
72 = and(70, 71)
73 = and(69, 72)
74 = and(66, 73)
75 = or(-74, -37)
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
# new y constraint equality gate with forall y variables: 
76 = and(39, -40)
# if then constraint for black predicate:
77 = or(-74, 76)
# disjunction for all touched positions:
# frame axiom; if not touched position, then it is propagated:
78 = or(74, 55)
# conjunction for all the then constraints:
79 = and(57, 59, 75, 77, 78)
# final if then constraint for current action:
80 = or(1, 79)
81 = and(-1, 80)
# Player 2 (white) transition function for time step 1: 
# propagation constraints:
82 = or(-39, 41)
83 = or(-41, 39)
84 = and(82, 83)
85 = or(-40, 42)
86 = or(-42, 40)
87 = and(85, 86)
88 = and(84, 87)
# less than constraints for white moves:
# generating less than bounds for indexes:
# less than constraints for positive index bounds:
89 = and(8, -9)
90 = or(-8, 89)
# less than constraints for positive index bounds:
91 = and(10, -11)
92 = or(-10, 91)
93 = and(90, 92)
94 = or(7, 93)
# conjunction for all the bound constraints:
95 = and(-7, 94)
# single equality gate for the bound boolean variale and the final bound conjuction gate:
96 = or(-12, 95)
97 = or(-95, 12)
98 = and(96, 97)
# generating precondition equalities with boolean variables:
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
99 = or(-8, 33)
100 = or(-33, 8)
101 = and(99, 100)
102 = or(-9, 34)
103 = or(-34, 9)
104 = and(102, 103)
105 = and(101, 104)
# new y constraint equality gate with forall y variables: 
106 = or(-10, 35)
107 = or(-35, 10)
108 = and(106, 107)
109 = or(-11, 36)
110 = or(-36, 11)
111 = and(109, 110)
112 = and(108, 111)
113 = and(105, 112)
114 = or(39, 13)
115 = or(-13, -39)
116 = and(114, 115)
117 = or(7, -113, 116)
# generating effects, implcation when the game is not stopped and bounds,preconditions hold:
118 = and(12, 13)
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
# new y constraint equality gate with forall y variables: 
119 = and(41, 42)
# if then constraint for white predicate:
120 = or(-113, 119)
# disjunction for all touched positions:
# frame axiom; if not touched position, then it is propagated:
121 = or(113, 88)
122 = and(120, 121)
123 = and(118, -7)
124 = or(-123, 122)
125 = and(98, 117, 124, -7)
# Player 1 (black) transition function for time step 2: 
# less than constraints for black moves:
# propagation constraints:
126 = or(-41, 43)
127 = or(-43, 41)
128 = and(126, 127)
129 = or(-42, 44)
130 = or(-44, 42)
131 = and(129, 130)
132 = and(128, 131)
# less than constraints for positive index bounds:
133 = and(15, -16)
134 = or(-15, 133)
# less than constraints for positive index bounds:
135 = and(17, -18)
136 = or(-17, 135)
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
137 = or(-15, 33)
138 = or(-33, 15)
139 = and(137, 138)
140 = or(-16, 34)
141 = or(-34, 16)
142 = and(140, 141)
143 = and(139, 142)
# new y constraint equality gate with forall y variables: 
144 = or(-17, 35)
145 = or(-35, 17)
146 = and(144, 145)
147 = or(-18, 36)
148 = or(-36, 18)
149 = and(147, 148)
150 = and(146, 149)
151 = and(143, 150)
152 = or(-151, -41)
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
# new y constraint equality gate with forall y variables: 
153 = and(43, -44)
# if then constraint for black predicate:
154 = or(-151, 153)
# disjunction for all touched positions:
# frame axiom; if not touched position, then it is propagated:
155 = or(151, 132)
# conjunction for all the then constraints:
156 = and(134, 136, 152, 154, 155)
# final if then constraint for current action:
157 = or(14, 156)
158 = and(-14, 157)
# Player 2 (white) transition function for time step 3: 
# propagation constraints:
159 = or(-43, 45)
160 = or(-45, 43)
161 = and(159, 160)
162 = or(-44, 46)
163 = or(-46, 44)
164 = and(162, 163)
165 = and(161, 164)
# less than constraints for white moves:
# generating less than bounds for indexes:
# less than constraints for positive index bounds:
166 = and(21, -22)
167 = or(-21, 166)
# less than constraints for positive index bounds:
168 = and(23, -24)
169 = or(-23, 168)
170 = and(167, 169)
171 = or(20, 170)
# conjunction for all the bound constraints:
172 = and(-20, 171)
# single equality gate for the bound boolean variale and the final bound conjuction gate:
173 = or(-25, 172)
174 = or(-172, 25)
175 = and(173, 174)
# generating precondition equalities with boolean variables:
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
176 = or(-21, 33)
177 = or(-33, 21)
178 = and(176, 177)
179 = or(-22, 34)
180 = or(-34, 22)
181 = and(179, 180)
182 = and(178, 181)
# new y constraint equality gate with forall y variables: 
183 = or(-23, 35)
184 = or(-35, 23)
185 = and(183, 184)
186 = or(-24, 36)
187 = or(-36, 24)
188 = and(186, 187)
189 = and(185, 188)
190 = and(182, 189)
191 = or(43, 26)
192 = or(-26, -43)
193 = and(191, 192)
194 = or(20, -190, 193)
# generating effects, implcation when the game is not stopped and bounds,preconditions hold:
195 = and(25, 26)
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
# new y constraint equality gate with forall y variables: 
196 = and(45, 46)
# if then constraint for white predicate:
197 = or(-190, 196)
# disjunction for all touched positions:
# frame axiom; if not touched position, then it is propagated:
198 = or(190, 165)
199 = and(197, 198)
200 = and(195, -20)
201 = or(-200, 199)
202 = and(175, 194, 201, -20)
# Player 1 (black) transition function for time step 4: 
# less than constraints for black moves:
# propagation constraints:
203 = or(-45, 47)
204 = or(-47, 45)
205 = and(203, 204)
206 = or(-46, 48)
207 = or(-48, 46)
208 = and(206, 207)
209 = and(205, 208)
# less than constraints for positive index bounds:
210 = and(28, -29)
211 = or(-28, 210)
# less than constraints for positive index bounds:
212 = and(30, -31)
213 = or(-30, 212)
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
214 = or(-28, 33)
215 = or(-33, 28)
216 = and(214, 215)
217 = or(-29, 34)
218 = or(-34, 29)
219 = and(217, 218)
220 = and(216, 219)
# new y constraint equality gate with forall y variables: 
221 = or(-30, 35)
222 = or(-35, 30)
223 = and(221, 222)
224 = or(-31, 36)
225 = or(-36, 31)
226 = and(224, 225)
227 = and(223, 226)
228 = and(220, 227)
229 = or(-228, -45)
# computing x variables for constraints,['?x', '?y'] add/sub/none:
# computing y variables for constraints,['?x', '?y'] add/sub/none:
# new x constraint equality gate with forall x variables: 
# new y constraint equality gate with forall y variables: 
230 = and(47, -48)
# if then constraint for black predicate:
231 = or(-228, 230)
# disjunction for all touched positions:
# frame axiom; if not touched position, then it is propagated:
232 = or(228, 209)
# conjunction for all the then constraints:
233 = and(211, 213, 229, 231, 232)
# final if then constraint for current action:
234 = or(27, 233)
235 = and(-27, 234)
# ------------------------------------------------------------------------
# Initial state: 
# ------------------------------------------------------------------------
# Goal state: 
# Black goal constraints: 
236 = or()
# And gate for black goal constraints, at index 5
# And gate for white goal constraints, at index 5
237 = and()
# forcing single index maps to 1: 
238 = and(-1, -7, -14, -20, -27)
# ------------------------------------------------------------------------
# Nested gates: 
239 = and(235, 236)
# white valid constraints at reverse index: 3
240 = or(-195, 239)
241 = and(202, 240)
# black imply constraints at reverse index: 2
242 = or(19, 241)
243 = or(-43, 47)
244 = or(-47, 43)
245 = and(243, 244)
246 = or(-44, 48)
247 = or(-48, 44)
248 = and(246, 247)
249 = and(245, 248)
250 = and(249, 236)
251 = or(-19, 250)
252 = and(158, 242, 251)
# white valid constraints at reverse index: 1
253 = or(-118, 252)
254 = and(125, 253)
# black imply constraints at reverse index: 0
255 = or(6, 254)
256 = or(-39, 47)
257 = or(-47, 39)
258 = and(256, 257)
259 = or(-40, 48)
260 = or(-48, 40)
261 = and(259, 260)
262 = and(258, 261)
263 = and(262, 236)
264 = or(-6, 263)
265 = and(81, 255, 264)
# ------------------------------------------------------------------------
# Final gate: 
# Conjunction of Initial gate, forced gate and nested output gate: 
266 = and(-37, 238, 265)
